1604378599
3 3
4 http 4 yA8D 4 http 
14
15 14 GetRequestType 0 4 29 28 Http_Request::GetRequestType 0 1 1 0
47
std::string Http_Request::GetRequestType(void);

16 13 GetRawRequest 0 4 29 27 Http_Request::GetRawRequest 0 1 2 0
46
std::string Http_Request::GetRawRequest(void);

17 13 GetRequestURL 0 4 29 27 Http_Request::GetRequestURL 0 1 3 0
46
std::string Http_Request::GetRequestURL(void);

18 16 GetSourceAddress 0 4 29 30 Http_Request::GetSourceAddress 0 1 4 0
49
std::string Http_Request::GetSourceAddress(void);

19 16 AppendToResponse 0 4 29 30 Http_Request::AppendToResponse 0 1 5 0
59
void Http_Request::AppendToResponse(std::string const &in);

20 16 SendThisResponse 0 4 29 30 Http_Request::SendThisResponse 0 1 6 0
59
void Http_Request::SendThisResponse(std::string const &in);

21 6 Finish 0 4 29 20 Http_Request::Finish 0 1 7 0
32
void Http_Request::Finish(void);

22 5 Abort 0 4 29 19 Http_Request::Abort 0 1 8 0
31
void Http_Request::Abort(void);

23 9 HasOption 0 4 29 23 Http_Request::HasOption 0 1 9 0
45
bool Http_Request::HasOption(std::string in);

24 9 GetOption 0 4 29 23 Http_Request::GetOption 0 1 10 0
52
char const *Http_Request::GetOption(std::string in);

25 22 GetRequestOptionString 0 4 29 36 Http_Request::GetRequestOptionString 0 1 11 0
55
std::string Http_Request::GetRequestOptionString(void);

26 22 HttpManager_Initialize 0 4 29 36 Http_Request::HttpManager_Initialize 0 1 12 0
74
static bool Http_Request::HttpManager_Initialize(unsigned short int port);

27 23 HttpManager_GetARequest 0 4 29 37 Http_Request::HttpManager_GetARequest 0 1 13 0
65
static Http_Request *Http_Request::HttpManager_GetARequest(void);

28 14 get_class_type 0 4 29 28 Http_Request::get_class_type 0 1 14 0
53
static TypeHandle Http_Request::get_class_type(void);

14
1 0 0 6 3 32 0 0 0 1 4 this 3 31  
2 0 0 6 4 32 0 0 0 1 4 this 3 31  
3 0 0 6 5 32 0 0 0 1 4 this 3 31  
4 0 0 6 6 32 0 0 0 1 4 this 3 31  
5 0 0 4 7 33 0 0 0 2 4 this 3 31  2 in 1 32  
6 0 0 4 8 33 0 0 0 2 4 this 3 31  2 in 1 32  
7 0 0 4 9 33 0 0 0 1 4 this 3 31  
8 0 0 4 10 33 0 0 0 1 4 this 3 31  
9 0 0 6 11 34 0 0 0 2 4 this 3 31  2 in 1 32  
10 0 0 6 12 32 0 0 0 2 4 this 3 31  2 in 1 32  
11 0 0 6 13 32 0 0 0 1 4 this 3 31  
12 0 0 6 14 34 0 0 0 1 4 port 1 35  
13 0 0 6 15 31 0 0 0 0 
14 0 0 7 16 37 0 0 0 0 
9
29 12 Http_Request 0 75777 12 Http_Request 12 Http_Request 0 0 0 0 0 0 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 0 0 1 0 30 0 0 0 0 0

30 14 HttpConnection 0 1050624 14 HttpConnection 14 HttpConnection 0 0 0 0 0 0 0 0 0 0 0 0 0

31 14 Http_Request * 0 8576 14 Http_Request * 14 Http_Request * 0 0 29 0 0 0 0 0 0 0 0 0 0

32 13 atomic string 0 2 13 atomic string 13 atomic string 0 7 0 0 0 0 0 0 0 0 0 0 0

33 4 void 0 8194 4 void 4 void 0 6 0 0 0 0 0 0 0 0 0 0 0

34 4 bool 0 8194 4 bool 4 bool 0 4 0 0 0 0 0 0 0 0 0 0 0

35 18 unsigned short int 0 8262 18 unsigned short int 18 unsigned short int 0 1 0 0 0 0 0 0 0 0 0 0 0

36 10 TypeHandle 0 16779264 10 TypeHandle 10 TypeHandle 0 0 0 0 0 0 0 0 0 0 0 0 732
/**
 * TypeHandle is the identifier used to differentiate C++ class types.  Any
 * C++ classes that inherit from some base class, and must be differentiated
 * at run time, should store a static TypeHandle object that can be queried
 * through a static member function named get_class_type().  Most of the time,
 * it is also desirable to inherit from TypedObject, which provides some
 * virtual functions to return the TypeHandle for a particular instance.
 *
 * At its essence, a TypeHandle is simply a unique identifier that is assigned
 * by the TypeRegistry.  The TypeRegistry stores a tree of TypeHandles, so
 * that ancestry of a particular type may be queried, and the type name may be
 * retrieved for run-time display.
 */

37 12 TypeHandle * 0 8576 12 TypeHandle * 12 TypeHandle * 0 0 36 0 0 0 0 0 0 0 0 0 0

0
0
0
